/**
 * The following styles get applied both on the front of your site
 * and in the editor.
 *
 * Replace them with your own styles or remove the file completely.
 */

 :root {
	// global variables - I would usually set these in a global stylesheet for the theme
	// to make this component flexible, the component variables are set in the component
	--site-global--color-primary: hsl(205, 55%, 63%);
	--site-global--color-secondary: hsl(212, 60%, 95%);
	--site-global--color-tertiary: hsl(94, 55%, 57%);

	--site-global--color-primary-accent: hsl(205, 74%, 49%);
	--site-global--color-primary-accent-dark: hsl(205, 77%, 15%);
	--site-global--color-primary-accent-light: hsl(205, 84%, 80%);

	--site-global--color-secondary-accent: hsl(212, 80%, 80%);
	--site-global--color-secondary-accent-dark: hsl(211, 23%, 18%);
	--site-global--color-secondary-accent-light: hsl(213, 56%, 88%);

	--site-global--color-tertiary-accent: hsl(94, 88%, 37%);
	--site-global--color-tertiary-accent-dark: hsl(94, 87%, 12%);
	--site-global--color-tertiary-accent-light: hsl(95, 81%, 87%);
}

// need to hide horizontal scroll bar when animating
body {
	overflow-x: hidden;
}

.wp-block-create-block-cta-block {
	// component variables
	--cta-spacing-inline: 2rem;
	--cta-spacing-block: 1.5rem;
	--cta-spacing-button-inline: 0.5rem;
	--cta-spacing-button-block: 1rem;
	--cta-animation-duration: 800ms;

	display: flex;
	flex-direction: column;
	background-color: var(--cta-background-color);
	color: var(--cta-text-color);

	@media screen and (min-width: 1200px) {
		--cta-spacing-inline: 2rem;
		--cta-spacing-block: 3rem;
	
		flex-direction: row;

		// add top margin if the image is offset
		&[component-layout-image="image-offset"] {
			margin-top: calc(var(--cta-spacing-block) * 2);
		}
	}

	// reverse the order of the image and text
	&[component-layout-text="text-left"] {
		@media screen and (min-width: 1200px) {
			flex-direction: row-reverse;
		}
	}

	// color themes
	&[component-theme="one"] {
		--cta-background-color: var(--site-global--color-primary);
		--cta-background-color-accent: var(--site-global--color-primary-accent);
		--cta-background-color-accent-dark: var(--site-global--color-primary-accent-dark);
		--cta-background-color-accent-light: var(--site-global--color-primary-accent-light);
		--cta-text-color: var(--cta-background-color-accent-dark);
	}

	&[component-theme="two"] {
		--cta-background-color: var(--site-global--color-secondary);
		--cta-background-color-accent: var(--site-global--color-secondary-accent);
		--cta-background-color-accent-dark: var(--site-global--color-secondary-accent-dark);
		--cta-background-color-accent-light: var(--site-global--color-secondary-accent-light);
		--cta-text-color: var(--cta-background-color-accent-dark);
	}

	&[component-theme="three"] {
		--cta-background-color: var(--site-global--color-tertiary);
		--cta-background-color-accent: var(--site-global--color-tertiary-accent);
		--cta-background-color-accent-dark: var(--site-global--color-tertiary-accent-dark);
		--cta-background-color-accent-light: var(--site-global--color-tertiary-accent-light);
		--cta-text-color: var(--cta-background-color-accent-dark);
	}

	&[component-animation='true'][component-is-animating='true'] {
		animation: fadeIn var(--cta-animation-duration) ease-in-out;
	}
}

.cta__image-container {
	background-color: var(--cta-background-color-accent);
	line-height: 0;

	@media screen and (min-width: 1200px) {
		flex: 0 40%;

		// if offset image, add top negative margin and bottom margin
		[component-layout-image="image-offset"] & {
			margin-top: calc(var(--cta-spacing-inline)/2 * -1);
			margin-bottom: calc(var(--cta-spacing-inline)/2);
		}

		[component-layout-text="text-right"][component-layout-image="image-offset"] & {
			margin-left: calc(var(--cta-spacing-inline)/2 * -1);
		}

		[component-layout-text="text-left"][component-layout-image="image-offset"] & {
			margin-right: calc(var(--cta-spacing-inline)/2 * -1);
		}
	}

	[component-layout-text="text-right"][component-animation='true'][component-is-animating='true'] & {
		animation: slideInLeft var(--cta-animation-duration) ease-in-out;
	}

	[component-layout-text="text-left"][component-animation='true'][component-is-animating='true'] & {
		animation: slideInRight var(--cta-animation-duration) ease-in-out;
	}
}

.cta__image-container img {
	width: 100%;
	height: 100%;
	max-height: 400px;
	object-fit: cover;

	// update height for desktop
	@media screen and (min-width: 1200px) {
		max-width: 100%;
		max-height: 100%;
	}

	// offset image
	[component-layout-image="image-offset"] & {
		@media screen and (min-width: 1200px) {
			margin-top: calc(var(--cta-spacing-inline)/2 * -1);
			background-color: var(--cta-background-color-accent);
		}
	}

	[component-layout-text="text-right"][component-layout-image="image-offset"] & {
		@media screen and (min-width: 1200px) {
			margin-left: calc(var(--cta-spacing-inline)/2 * -1);
		}
	}

	[component-layout-text="text-left"][component-layout-image="image-offset"] & {
		@media screen and (min-width: 1200px) {
			margin-left: calc(var(--cta-spacing-inline)/2);
		}
	}
}

.cta__text-container {
	display: flex;
	flex-direction: column;
	gap: 0.5rem;
	padding: var(--cta-spacing-block) var(--cta-spacing-inline);

	@media screen and (min-width: 1200px) {
		flex: 0 60%;
	}

	[component-layout-text="text-right"][component-animation='true'][component-is-animating='true'] & {
		animation: slideInRight var(--cta-animation-duration) ease-in-out;
	}

	[component-layout-text="text-left"][component-animation='true'][component-is-animating='true'] & {
		animation: slideInLeft var(--cta-animation-duration) ease-in-out;
	}
}

.cta__text-container h2 {
	font-size: 1.5rem;
	margin: 0;
}

.cta__button {
	font-size: 1rem;
	line-height: 1.5;
	text-decoration: none;
	font-weight: bold;
	cursor: pointer;
	max-width: max-content;
	background-color: var(--cta-background-color);
	border: 0.25rem solid var(--cta-background-color-accent-dark);
	color: var(--cta-text-color);
	padding: var(--cta-spacing-button-inline) var(--cta-spacing-button-block);

	&:visited {
		color: black;
		background-color: var(--cta-background-color-accent-light);
	}

	&:hover {
		background-color: var(--cta-background-color-accent-light);
		color: var(--cta-background-color-accent-dark);
	}

	&:focus-visible {
		outline: 0.25rem solid var(--cta-background-color-accent);
		outline-offset: 0.25rem;
	}
}

// animation
@keyframes slideInLeft {
  from {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
    visibility: visible;
  }

  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideInRight {
  from {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
    visibility: visible;
  }

  to {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
